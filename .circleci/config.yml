version: 2.1

orbs:
  redhat-openshift: circleci/redhat-openshift@0.2.0
  orb-tools: circleci/orb-tools@8.27.4
  gcp-gcr: circleci/gcp-gcr@0.7.1

executors:
  ruby:
    docker:
      - image: "circleci/ruby:2.6.4"

jobs:
  lint:
    executor: redhat-openshift/default
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule update --init
      - redhat-openshift/login-and-update-kubeconfig:
          insecure-skip-tls-verify: true
          openshift-platform-version: 3.x
          server-address: $OC_SERVER_ADDRESS
          token: $OC_TOKEN
      - run:
          command: make lint
          name: Lint the openshift yaml

  build_and_push:
    executor: gcp-gcr/default
    parameters:
      image_tag:
        type: string
      cache_version:
        type: integer
        default: 2
    steps:
      - checkout
      - gcp-gcr/gcr-auth
      - restore_cache:
          keys:
            - v<< parameters.cache_version>>-cas-postgres-{{ .Branch }}
          paths:
            - /tmp/cas-postgres.tar
      - run:
          name: Load cache
          command: |
            set +o pipefail
            docker load -i /tmp/cas-postgres.tar | true
      - run:
          name: Log in to DockerHub
          command: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USER --password-stdin registry.hub.docker.com
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=cas-postgres -t cas-postgres:latest -t gcr.io/${GOOGLE_PROJECT_ID}/cas-postgres:<< parameters.image_tag >> .
      - run:
          name: Save Docker image layer cache
          command: |
            docker save -o /tmp/cas-postgres.tar cas-postgres:latest
      - save_cache:
          key: v<< parameters.cache_version>>-cas-postgres-{{ .Branch }}-{{ epoch }}
          paths:
            - /tmp/cas-postgres.tar
      - gcp-gcr/push-image:
          image: cas-postgres
          tag: << parameters.image_tag >>
          digest-path: /tmp/digest.txt
      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"

  test-unit:
    executor: ruby
    steps:
      - orb-tools/install-bats
      - checkout
      - run:
          name: Pull Submodules
          command: |
            git submodule update --init
      - run:
          command: make test_unit
          name: Run unit tests via make

workflows:
  test:
    jobs:
      - test-unit:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: gh-pages
      - build_and_push:
          name: build_and_push_sha1
          image_tag: ${CIRCLE_SHA1}
          context: cas-pipeline
          requires:
            - test-unit
      - build_and_push:
          name: build_and_push_tag
          image_tag: ${CIRCLE_TAG/v/}
          context: cas-pipeline
          requires:
            - test-unit
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
